<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.galapagos.mapper.CommentMapper">

	<resultMap id="CommentMap" type="CommentVO">
		<id property="no" column="no" />
		<result property="bno" column="bno" />
		<result property="content" column="c_content" />
		<result property="username" column="c_username" />
		<result property="nickname" column="c_nickname" />
		<result property="registerDate" column="c_register_date" />
		<result property="updateDate" column="c_update_date" />

		<!-- collection의 자식태그로 정의 -->
		<!-- collection은 java에서 List이므로 JSON에서는 배열[]처리해야 한다. -->
		<collection property="replyList"
			ofType="org.galapagos.domain.ReplyVO">
			<id property="no" column="r_no" />
			<result property="cno" column="cno" />
			<result property="content" column="r_content" />
			<result property="username" column="r_username" />
			<result property="nickname" column="r_nickname" />
			<result property="registerDate" column="r_register_date" />
			<result property="updateDate" column="r_update_date" />
		</collection>
	</resultMap>

	<insert id="create">
		insert into argument_post_comment (bno, username, nickname, content)
		values(#{bno}, #{username}, #{nickname}, #{content})
		<!-- insert로 인해 property랑 column에 auto_increment 된 값이 무엇인지 확인용 -->
		<selectKey resultType="Long" keyProperty="no" keyColumn="no"
			order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>
	<update id="update">
		update argument_post_comment
		set
		content = #{content},
		update_date = now()
		where no = #{no}
	</update>
	<delete id="delete">
		delete from argument_post_comment
		where no = #{no}
	</delete>

	<!-- SQL에서 select 조인문 가져오기 -->
	<select id="readAll" resultMap="CommentMap">
		select
		c.no, c.bno, c.content c_content, c.nickname c_nickname,
		c.register_date c_register_date, c.update_date c_update_date,
		r.no r_no, r.cno, r.content r_content, r.nickname r_nickname,
		r.register_date r_register_date, r.update_date r_update_date
		from
		argument_post_comment c left join argument_post_reply r
		on c.no = r.cno
		where bno = #{bno}
		order by c.no desc, r.no
	</select>
	<select id="get" resultType="CommentVO">
		select
		c.no, c.bno, c.content c_content, c.nickname c_nickname,
		c.register_date c_register_date, c.update_date c_update_date,
		r.no r_no, r.cno, r.content r_content, r.nickname r_nickname,
		r.register_date r_register_date, r.update_date r_update_date
		from
		argument_post_comment c left join argument_post_reply r
		on c.no = r.cno
		where c.no = #{no}
	</select>
	

</mapper>