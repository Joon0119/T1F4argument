<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.galapagos.mapper.FameMapper">
	<sql id="criteria">
		<trim prefixOverrides="OR" prefix="and (" suffix=")">
			<foreach item="type" collection="typeArr">
				<trim prefix="OR">
					<choose>
						<when test="type == 'T'.toString()">
							title like CONCAT('%', #{keyword}, '%')
						</when>
						<when test="type == 'C'.toString()">
							content like CONCAT('%', #{keyword}, '%')
						</when>
						<when test="type == 'N'.toString()">
							nickname like CONCAT('%', #{keyword}, '%')
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>

	<select id="getFameTotalCount" resultType="int">
		select count(*) from view_post
		<where>
			<include refid="criteria"></include>
		</where>
		where category_id = 2
		order by bno desc
	</select>

	<select id="getFameList" resultType="BoardVO">
		select vp.*, ac.category_id
		from view_post vp
		join argument_category ac on vp. category_id = ac.category_id	
		where vp.category_id = 2
		order by vp.bno desc
	</select>

	<select id="getFameListWithPaging" resultType="BoardVO">
		select * from view_post
		<where>
			<include refid="criteria"></include>
		</where>
		order by bno desc
		limit #{offset}, #{amount}
	</select>
	
	<select id="readFame" resultType="BoardVO">
		select * from view_post 
		where bno = #{bno}
	</select>

	<insert id="insertFame">
		insert into argument_post (category_id, title, content, nickname)
		values(2, #{title}, #{content}, #{nickname} )
    </insert>

	<insert id="insertSelectKeyFame">
		insert into argument_post (category_id, title, content, nickname)
		values(2, #{title}, #{content}, #{nickname} )

		<selectKey resultType="Long" keyProperty="bno"
			keyColumn="bno" order="AFTER">
			select last_insert_id()
		</selectKey>
	</insert>
	
	<delete id="deleteFame">
		delete from argument_post
		where bno = #{bno}
	</delete>

	<update id="updateFame">
		update argument_post set
			title = #{title},
			content = #{content},
			nickname = #{nickname},
			update_date = now()
		where bno = #{bno}
	</update>
	
	<update id="plusHit" parameterType="long">
		update argument_post set
		hit = hit + 1
		where bno = #{bno}
	</update>
	
	<select id="getLikesList" resultType="long">
		select bno from argument_post_likes
		where username = #{username}
	</select>
	
	<insert id="addLike">
		insert into argument_post_likes(bno, username)
		values (#{bno}, #{username})
	</insert>
	
	<delete id="deleteLike">
		delete from argument_post_likes
		where bno = #{bno} and username = #{username} 
	</delete>
	
	<select id="mainFame" resultType="BoardVO">
		select * from argument_post ap where category_id = 2
		order by bno desc 
		limit 4
	</select>

</mapper>
